#%RAML 0.8
---
title: kodokojo API
baseUri: /api/{version}
mediaType: application/json
securitySchemes:
  - basic:
      type: Basic Authentication
version: v1
schemas:
  - email: |
      {
        "type": "object",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/email",
        "required": true,
        "properties": {
          "email": {
            "type": "string",
            "required": true
          }
        }
      }
  - identifier: |
      {
        "type": "string",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/identifier",
        "required": true
      }
  - identifiers: |
      {
        "type": "array",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/identifiers",
        "items": {
          "id": "http://kodokojo.io/identifier",
          "type": "string"
        },
        "required": true
      }
  - userCreated: |
      {
        "type": "string",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/userCreated",
        "required": true,
        "properties": {
          "identifier": {
            "type": "string",
            "required": true
          },
          "firstName": {
            "type": "string",
            "required": false
          },
          "lastName": {
            "type": "string",
            "required": false
          },
          "name": {
            "type": "string",
            "required": true
          },
          "username": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": true
          },
          "privateKey": {
            "type": "string",
            "required": true
          },
          "sshPublicKey": {
            "type": "string",
            "required": true
          }
        }
      }
  - user: |
      {
        "type": "string",
        "$schema": "http://json-schema.org/draft-04/schema",
        "id": "http://kodokojo.io/user",
        "required": true,
        "properties": {
          "identifier": {
            "type": "string",
            "required": true
          },
          "firstName": {
            "type": "string",
            "required": false
          },
          "lastName": {
            "type": "string",
            "required": false
          },
          "name": {
            "type": "string",
            "required": true
          },
          "username": {
            "type": "string",
            "required": true
          },
          "email": {
            "type": "string",
            "required": true
          },
          "password": {
            "type": "string",
            "required": false
          },
          "privateKey": {
            "type": "string",
            "required": false
          },
          "sshPublicKey": {
            "type": "string",
            "required": false
          }
        }
      }
  - projectCreation: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": "http://kodokojo.io/projectCreation",
        "type": "object",
        "properties": {
          "name": {
            "id": "http://kodokojo.io/name",
            "type": "string"
          },
          "ownerIdentifier": {
            "id": "http://kodokojo.io/identifier",
            "type": "string"
          },
          "userIdentifiers": {
            "id": "http://kodokojo.io/identifiers",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "ownerIdentifier"
        ]
      }
  - projectConfiguration: |
      {
        "$schema": "http://json-schema.org/draft-04/schema#",
        "id": "http://kodokojo.io",
        "type": "object",
        "properties": {
          "identifier": {
            "id": "http://kodokojo.io/identifier",
            "type": "string"
          },
          "name": {
            "id": "http://kodokojo.io/name",
            "type": "string"
          },
          "owner": {
            "id": "http://kodokojo.io/owner",
            "type": "object",
            "properties": {
              "identifier": {
                "id": "http://kodokojo.io/owner/identifier",
                "type": "string"
              },
              "username": {
                "id": "http://kodokojo.io/owner/username",
                "type": "string"
              }
            }
          },
          "users": {
            "id": "http://kodokojo.io/users",
            "type": "array",
            "items": {
              "id": "http://kodokojo.io/user",
              "type": "object",
              "properties": {
                "identifier": {
                  "id": "http://kodokojo.io/user/identifier",
                  "type": "string"
                },
                "username": {
                  "id": "http://kodokojo.io/user/username",
                  "type": "string"
                }
              }
            }
          },
          "stackConfigs": {
            "id": "http://kodokojo.io/stackConfigs",
            "type": "array",
            "items": {
              "id": "http://kodokojo.io/stackConfig",
              "type": "object",
              "properties": {
                "name": {
                  "id": "http://kodokojo.io/stackConfig/name",
                  "type": "string"
                },
                "type": {
                  "id": "http://kodokojo.io/stackConfig/type",
                  "type": "string"
                },
                "brickConfigs": {
                  "id": "http://kodokojo.io/stackConfigs/brickConfigs",
                  "type": "array",
                  "items": [
                    {
                      "id": "http://kodokojo.io/stackConfigs/brickConfig",
                      "type": "object",
                      "properties": {
                        "name": {
                          "id": "http://kodokojo.io/stackConfigs/brickConfig/name",
                          "type": "string"
                        },
                        "type": {
                          "id": "http://kodokojo.io/stackConfigs/brickConfig/type",
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
/user:
  post:
    description: Allow to obtain a temporary identifier which may use _post_ to create a new user.
    responses:
      200:
        body:
          application/json:
            schema: identifier
            example: c9684705cc0b8d5381165756bca40832a67c3a58
  get:
    description: Get current User details
    securedBy: [basic]
    responses:
      200:
        description:
          Return user details without password and private RSA key.
        body:
          application/json:
            schema: user
            example: |
              {
                "identifier":"59e860b31588a0a1f2ae3fa75764ce133a6985e3",
                "firstName":"Jean-pascal",
                "lastName":"THIERY",
                "name":"jpthiery",
                "username":"jpthiery",
                "email":"jpthiery@xebia.fr",
                "password":"",
                "privateKey":"",
                "sshPublicKey":""
              }
      404:
        description:
          User not found with the given identifier
      401:
        description:
          A valid authentification is requiered.
  /{identifier}:
    post:
      description: Create a user with given identifier
      body:
        application/json:
          schema: email
          example: |
            {
              "email": "jpthiery@xebia.fr"
            }
      responses:
        201:
          description:
            Return created user with password and private RSA key.
          headers:
            Location:
              description: |
                The location to acces to defail of created User.
              type: string
              example: |
                /user/59e860b31588a0a1f2ae3fa75764ce133a6985e3
          body:
            application/json:
              schema: userCreated
              example: |
                {
                  "identifier":"59e860b31588a0a1f2ae3fa75764ce133a6985e3",
                  "name":"jpthiery",
                  "username":"jpthiery",
                  "email":"jpthiery@xebia.fr",
                  "password":"e0k4208ac3huk2g5fuutbvrd3e",
                  "privateKey":"-----BEGIN RSA PRIVATE KEY-----\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCIiTddCskXUNi7\nRCcgnZGGcfqskOmLeL2pQc7W9wXrsbBDJz74J78LKWT+HvMVj+A8fKEVzh3Ftc6I\nlQFyQClXXnuhFY+nyoy9HDKxAw1SyesqE21Sb++ih7mOFU7UMGv2UCfKxVvOPFxR\n2Okjyar6CES9jG6u6quorwaBu9mUty0vej61PAQL65Txd8BTaGlKCTNEXLSFmvnp\npBIRvNBCRxgzJnRDly/afedmw+5KGXTxXZMSexGa9oe9fszCzvg0y8o17HUs/sW4\nOcZUeKHHplVTR+urZx7rSL6KjJ/hAH9TXlAx6JcIwrdHrVxz2SRTpLPWZQm5qzlb\n5OOqvFr1AgMBAAECggEAVCkorDxyueGGxt/6slsOEe5+ExL8MpGJbyR2aAE6cA9G\nVA6D/Rka5LluXEodksPt97rm3HcB2RX5Ki2XB6LPGODPmfqdY1MyL3uLL5tvAgIe\n5/+zmmYPM4Mv+Inf3mG+msTL0myW62g/i+AFzZ6IuriQDrramw1iJIdGnn95XfYe\nnT7Yk4I6JmaAu+DpbEGIZV2WoNXJnXK2EXFXzxkaMmdKjbsE0SBQCLUDaVZmn9bx\nBF51LL3a2aYTvFpb0ER6dWWSWIc9FLVzz10dEDDWvJoU6Z+SwS6/UUv/EJpp+DFy\nZDAajzYqZy6KficP8RoCEnPGHQAPgAo+siETK6qj3QKBgQD78/FQ0awQubWKOEH4\nOyz5sSUgtz17ZYDw3t3sX70o3tvEQxKZdWwCdqlI88eKYcCn3DcKAmJmhtJlVjRX\nKYkQQ43csDXfOHXen5MvU9svWVvZOIW7XAraZRsBeWLvhsCIdN+usE+YNAJ3s6SH\n4UJehmIjPnZTKkIM8vcMBn63pwKBgQCKuqq9JEPwZu+FkNnvoXtAtar0yH98vAYq\nTFkG7QXjQHRQbUns/e47e8p0Fvjq8yRHtCBfTnJqvCAlWpWY7JKMd5AfJ2T3YdcR\nTxSjJhFkIAxB60piI+QbTq0jLEn5CQfosGH7gPjVerA672L83OXtpyZPd+9x72AO\nWcJuaMSsAwKBgQCji9TP/lpvvOyfnScNZ/Qo3JlaJDfvmpLZSAHMRtU163vCaTtw\ni60h6D640S1soUl6bNL5V1Tico+uIgf1sEt9WCyE3YkKrc6tRO44oXk8wgeB+FOu\nq++LlmeyTEYxb0oZCayM63uvM8uKQf0CCvGXBCo98HTERUD8wNYmYyzsLwKBgQCC\npJlnd0B3oyhLOwbRcNvWK36r+Ch+ub6AlNd9+zYBNVCT8OeeQ9/WqpQUURHmiESR\nNeMKfaCoPTN0meKpWZgEqg/SFtIxWTUkurkvjwjvpnKEnWS2GSCWSrgnmGytFkEZ\ncwlCxMkQmPJe/dLVV907uZ4NVl/qhseJnCPKv+T+KwKBgQDLVeG47p69g5nLBR2K\nyO8CUXInsucTtjEx3d1GeHoooC/UjOLo8+aZ2DdGgRSbfjnPZQ7dNG8uZRDAiHjv\nW9ul87GGI4lGqbpzlVsSk8h5STeKWXcIbrnEOPBt6iRBSFT/7VdQIBQstJ/3qm05\nn57rpPmkEe4QCTx6MtLxzjRLPg\u003d\u003d\n-----END RSA PRIVATE KEY-----\n",
                  "sshPublicKey":"ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCIiTddCskXUNi7RCcgnZGGcfqskOmLeL2pQc7W9wXrsbBDJz74J78LKWT+HvMVj+A8fKEVzh3Ftc6IlQFyQClXXnuhFY+nyoy9HDKxAw1SyesqE21Sb++ih7mOFU7UMGv2UCfKxVvOPFxR2Okjyar6CES9jG6u6quorwaBu9mUty0vej61PAQL65Txd8BTaGlKCTNEXLSFmvnppBIRvNBCRxgzJnRDly/afedmw+5KGXTxXZMSexGa9oe9fszCzvg0y8o17HUs/sW4OcZUeKHHplVTR+urZx7rSL6KjJ/hAH9TXlAx6JcIwrdHrVxz2SRTpLPWZQm5qzlb5OOqvFr1 jpthiery@xebia.fr"
                }
        428:
          description:
            Enable to create the user due to a error while processing creation of the user. May be due to a bad identifier.
        409:
          description:
            The username already exist.
        412:
          description:
            Identifier not valid.
    get:
      description: Get User details
      securedBy: [basic]
      responses:
        200:
          description:
            Return user details without password and private RSA key.
          body:
            application/json:
              schema: user
              example: |
                {
                  "identifier":"59e860b31588a0a1f2ae3fa75764ce133a6985e3",
                  "name":"jpthiery",
                  "username":"jpthiery",
                  "email":"jpthiery@xebia.fr",
                  "password":"",
                  "privateKey":"",
                  "sshPublicKey":""
                }
        404:
          description:
            User not found with the given identifier
        403:
          description:
            This user details can't be visible
/projectconfig:
  post:
    description: Create a Project configuration with a default stack.
    securedBy: [basic]
    body:
      application/json:
        schema: projectCreation
        example: |
          {
            "name": "Acme",
            "ownerIdentifier": "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
            "userIdentifiers": [
              "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
            ]
          }
    responses:
      201:
        description:
          Return project configuration Id.
        headers:
          Location:
            description: |
                The location to acces to defail of project configuration.
            type: string
            example: |
              /projectconfig/50e860b31588a0a1f2ae3fa75764ce133a6a267
        body:
          application/json:
            schema: identifier
            example: |
              59e860b31588a0a1f2ae3fa75764ce133a6985e3
  /{identifier}:
    get:
      description: Get projectConfiguration details.
      securedBy: [basic]
      responses:
        200:
          description: Return a project configuration detail.
          body:
            application/json:
              schema: projectConfiguration
              example: |
                {
                  "identifier":"4ae84a999e553e4a85778c3229cc67fe4d4888d1",
                  "name":"Acme",
                  "owner": {
                    "identifier":"61e8209320eb5c1257e992db84bffe7e14cc7eb1",
                    "username":"jpthiery"
                  },
                  "users": [
                    {
                      "identifier":"61e8209320eb5c1257e992db84bffe7e14cc7eb1",
                      "username":"jpthiery"
                    }
                  ],
                  "stackConfigs": [
                    {
                      "name":"build-A",
                      "type":"BUILD",
                      "brickConfigs": [
                        {
                          "name":"jenkins",
                          "type":"CI"
                        },
                        {
                          "name":"gitlab",
                          "type":"SCM"
                        },
                        {
                          "name":"haproxy",
                          "type":"LOADBALANCER"
                        }
                      ]
                    }
                  ]
                }
        401:
          description: Authentification requiered.
        403:
          description: Your are not the owner of the project.
        404:
          description: Project configuration not found.
    /user:
      put:
        description: Add a list of new User to a given project.
        securedBy: [basic]
        body:
          application/json:
            schema: identifiers
            example: |
              [
                "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
                "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
              ]
        responses:
          200:
            description:
              All user identifiers had been added to the project.
          401:
            description:
              Authentification requiered.
          403:
            description:
              Your are not owner of project.
          404:
            description:
              Project configuration not found.
      delete:
        description: Delete a list of User to a given project.
        securedBy: [basic]
        body:
          application/json:
            schema: identifiers
            example: |
              [
                "60e860b31588a0a1f2ae3fa75764ce133a6985f4",
                "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
              ]
        responses:
          200:
            description:
              All user identifiers had been deleted to the project.
          401:
            description:
              Authentification requiered.
          403:
            description:
              Your are not owner of project.
          404:
            description:
              Project configuration not found.
/project:
  /{identifier}:
    post:
      description: Create and Starct a Project with given Project configuration
      securedBy: [basic]
      body:
        application/json:
          schema: identifier
          example: |
            "c918adf9e28d0bae432b3b89fa7b2f5be682a16e"
      responses:
        201:
          description:
            Return project Id.
          headers:
            Location:
              description: |
                  The location to acces to defail of project.
              type: string
              example: |
                /project/50e860b31588a0a1f2ae3fa75764ce133a6a267
          body:
            application/json:
              schema: identifier
              example: |
                59e860b31588a0a1f2ae3fa75764ce133a6985e3
        403:
          description: You are not the owner of the project.
        404:
          description: Project configuration not found.
        409:
          description: Project already exist